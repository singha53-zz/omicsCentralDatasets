cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.delim(here::here("rawData", pathwayName), header = FALSE)
pathway <- apply(dat[, -1], 1, function(members){
members <- as.character(as.matrix(members))
members[members != ""]
members
})
pathway
dat[, -1]
head9dat[, -1]
head(dat[, -1])
head(Dat)
head(dat)
head( dat %>%
gather(Members, Genes, -V1))
library(dplyr)
head( dat %>%
gather(Members, Genes, -V1))
library(tidyr)
head( dat %>%
gather(Members, Genes, -V1))
head(dat)
dat[dat == ""] <- NA
head(dat)
head(dat %>%
gather(Members, Genes, -V1))
head(dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(NA)))
head(dat %>%
gather(Members, Genes, -V1) %>%
filter(Genes != NA))
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes))
head(dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)))
dat[,1]
databaseFiles <- c("BioCarta_2016.csv")
pathwayName = "BioCarta_2016.csv"
pathwayName
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.delim(here::here("rawData", pathwayName), header = FALSE)
head(dat)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
head(dat)
dat[,1]
head(dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)))
head(dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes))
pathwayList <- list()
databaseFiles <- c("BioCarta_2016.csv")
for(pathwayName in databaseFiles){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
pathway <- dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes)
pathwayList[[pathwayName]] <- pathway
}
# names(pathwayList) <- databaseFiles
pathwayList
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayList <- lapply(databaseFiles, function(i){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes)
})
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayList <- lapply(databaseFiles, function(pathwayName){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes)
})
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayDB <- lapply(databaseFiles, function(pathwayName){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes)
}) %>%
do.call(cbind, .)
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayDB <- lapply(databaseFiles, function(pathwayName){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes)
}) %>%
do.call(rbind, .)
head(pathwayDB)
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayDB <- lapply(databaseFiles, function(pathwayName){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes) %>%
mutate(DB = pathwayName)
}) %>%
do.call(rbind, .)
head(pathwayDB)
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayDB <- lapply(databaseFiles, function(pathwayName){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes) %>%
mutate(DB = gsub("", ".csv", pathwayName))
}) %>%
do.call(rbind, .)
head(pathwayDB)
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayDB <- lapply(databaseFiles, function(pathwayName){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes) %>%
mutate(DB = gsub(".csv", "", pathwayName))
}) %>%
do.call(rbind, .)
head(pathwayDB)
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n())
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = nrow())
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = nrow(.))
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n(.))
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n())
pathwayDB %>%
group_by(DB, Pathways) %>%
nest()
head(pathwayDB)
subset(pathwayDB, DB == "BioCarta_2016", Pathways == "Classical Complement Pathway Homo sapiens h classicPathway")
subset(pathwayDB, DB == "BioCarta_2016" & Pathways == "Classical Complement Pathway Homo sapiens h classicPathway")
head(dat)
dat[1,]
dat[dat == ""] <- NA
dat[1,]
dat[1,][!is.na(dat[1,])]
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayDB <- lapply(databaseFiles, function(pathwayName){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat[dat == ""] <- NA
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes) %>%
mutate(DB = gsub(".csv", "", pathwayName))
}) %>%
do.call(rbind, .)
subset(pathwayDB, DB == "BioCarta_2016" & Pathways == "Classical Complement Pathway Homo sapiens h classicPathway")
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n())
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity")
library(tidyverse)
library(tidyverse)
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity")
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity") +
scale_y_log10()
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity") +
scale_y_log10()
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity") +
scale_y_log10()
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
pathwayDB %>%
group_by(DB) %>%
summarise(n = n()) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity")
head(pathwayDB %>%
group_by(DB) %>%
summarise(n = n()))
pathwayDB %>%
group_by(DB) %>%
summarise(n = n()) %>%
arrange(n) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity")
pathwayDB %>%
group_by(DB) %>%
summarise(n = n()) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity")
pathwayDB %>%
group_by(DB) %>%
summarise(n = n()) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity") +
scale_y_log10()
pathwayDB %>%
group_by(DB) %>%
summarise(n = n()) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity")
pathwayDB %>%
group_by(DB) %>%
summarise(n = n()) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity") +
ylab("Number of pathways per DB") +
xlab("DB") +
theme_classic()
head(pathwayDB)
head(pathwayDB %>%
dplyr::select(DB, Pathways))
dim(pathwayDB %>%
dplyr::select(DB, Pathways)
group_by(DB, Pathways))
dim(pathwayDB %>%
dplyr::select(DB, Pathways))
dim(pathwayDB %>%
dplyr::select(DB, Pathways) %>%
group_by(DB, Pathways) )
pathwayDB %>%
group_by(DB) %>%
summarise(n = n_distinct()) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity")
pathwayDB %>%
group_by(DB) %>%
summarise(n = n_distinct(Pathways)) %>%
ggplot(aes(x = DB, y = n)) +
geom_bar(stat = "identity")
pathwayDB %>%
group_by(DB) %>%
summarise(n = n_distinct(Pathways)) %>%
ggplot(aes(x = reorder(DB, ~n), y = n)) +
geom_bar(stat = "identity")
pathwayDB %>%
group_by(DB) %>%
summarise(n = n_distinct(Pathways)) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity")
pathwayDB %>%
group_by(DB) %>%
summarise(n = n_distinct(Pathways)) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity") +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
pathwayDB %>%
ggplot(aes(x = Pathways, y = n)) +
geom_bar(stat = "identity") +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
head(pathwayDB)
head(pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()))
ggplot(aes(x = Pathways, y = n)) +
geom_bar(stat = "identity") +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = Pathways, y = n)) +
geom_bar(stat = "identity") +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = n)) +
geom_histogram()
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = n)) +
geom_histogram() +
facet_wrap(vars(DB)) +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = n)) +
geom_histogram() +
facet_wrap(vars(DB), scales = "free") +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = n)) +
geom_histogram() +
facet_wrap(vars(DB), scales = "free") +
scale_y_log10() +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
pathwayDB %>%
group_by(DB) %>%
summarise(n = n_distinct(Pathways)) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity") +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
pathwayDB %>%
group_by(DB) %>%
summarise(n = n_distinct(Genes)) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity") +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
head(pathwayTally)
pathwayTally <- pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n())
pathwayTally %>%
ggplot(aes(x = n)) +
geom_histogram() +
facet_wrap(vars(DB), scales = "free") +
scale_y_log10() +
ylab("Frequency of genesets with a given number of genes") +
xlab("Number of genes") +
theme_classic()
head(pathwayTally)
pathwayTally %>%
arrnage(n) %>%
slice(1)
pathwayTally %>%
arrange(n) %>%
slice(1)
pathwayTally %>%
arrange(desc(n)) %>%
slice(1)
pathwayTally %>%
ggplot(aes(x = n)) +
geom_histogram() +
facet_wrap(vars(DB), scales = "free") +
scale_y_log10() +
ylab("Frequency of genesets with a given number of genes") +
xlab("Number of genes") +
theme_classic()
library(tidyverse); library(knitr);
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, warning = FALSE, message = FALSE)
library(tidyverse); library(knitr);
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayDB <- lapply(databaseFiles, function(pathwayName){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat[dat == ""] <- NA
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes) %>%
mutate(DB = gsub(".csv", "", pathwayName))
}) %>%
do.call(rbind, .)
pathwayDB %>%
dplyr::select(DB, Pathways) %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity") +
ylab("Number of pathways per DB") +
xlab("DB") +
theme_classic()
pathwayDB %>%
group_by(DB) %>%
summarise(n = n_distinct(Genes)) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity") +
ylab("Number of genesets") +
xlab("DB") +
theme_classic()
pathwayTally <- pathwayDB %>%
group_by(DB, Pathways) %>%
summarise(n = n())
pathwayTally %>%
ggplot(aes(x = n)) +
geom_histogram() +
facet_wrap(vars(DB), scales = "free") +
scale_y_log10() +
ylab("Frequency of genesets with a given number of genes") +
xlab("Number of genes") +
theme_classic()
usethis::use_data(pathwayDB)
data(pathwaysDB)
head(pathwayDB)
knitr::opts_chunk$set(echo = TRUE, cache = FALSE, warning = FALSE, message = FALSE)
library(tidyverse); library(knitr);
databaseFiles <- c("BioCarta_2016.csv", "KEGG_2019_Human.csv", "Reactome_2016.csv", "WikiPathways_2019_Human.csv")
pathwayDB <- lapply(databaseFiles, function(pathwayName){
cat("Processing: ", pathwayName, fill = TRUE)
dat <- read.csv(here::here("rawData", pathwayName), header = FALSE)
dat[dat == ""] <- NA
dat %>%
gather(Members, Genes, -V1) %>%
filter(!is.na(Genes)) %>%
rename(Pathways = V1) %>%
dplyr::select(Pathways, Genes) %>%
mutate(DB = gsub(".csv", "", pathwayName))
}) %>%
do.call(rbind, .)
pathwayDB %>%
dplyr::select(DB, Pathways) %>%
group_by(DB, Pathways) %>%
summarise(n = n()) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity") +
ylab("Number of pathways per DB") +
xlab("DB") +
theme_classic()
pathwayDB %>%
dplyr::select(DB, Pathways) %>%
group_by(DB) %>%
summarise(n = n_distinct(Pathways)) %>%
ggplot(aes(x = reorder(DB, -n), y = n)) +
geom_bar(stat = "identity") +
ylab("Number of pathways per DB") +
xlab("DB") +
theme_classic()
library(omicsDatasets);
data(pathwayDB)
class(pathwayDB)
head(pathwayDB)
head(as_tibble(pathwayDB))
as_tibble(pathwayDB)
class(as_tibble(pathwayDB))
roxygen2::roxygenise()
roxygen2::roxygenise()
document()
document::document()
devtools::document()
devtools::document()
library(omicsCentralDatasets)
head(pathwayDB)
head(pathwayDB)
library(omicsCentralDatasets)
head(pathwayDB)
pathwayDB$Pathways
library(omicsCentralDatasets)
?pathwayDB
